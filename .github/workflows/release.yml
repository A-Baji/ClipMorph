name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version number (without v prefix, format: X.Y.Z)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0
    
    - name: Validate version format
      run: |
        VERSION="${{ github.event.inputs.version }}"
        
        # Check if version matches X.Y.Z format (where X, Y, Z are numbers)
        if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "❌ Error: Version must be in format X.Y.Z (e.g., 1.2.3)"
          echo "Received: $VERSION"
          exit 1
        fi
        
        echo "✓ Version format is valid: $VERSION"
    
    - name: Check if version tag exists
      run: |
        if git rev-parse "v${{ github.event.inputs.version }}" >/dev/null 2>&1; then
          echo "❌ Error: Version v${{ github.event.inputs.version }} already exists"
          exit 1
        fi
        
        echo "✓ Version tag does not exist yet"

    - name: Generate GitHub App token
      id: generate_token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}
        
    - name: Update version and create tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Update version file
        echo "__version__ = \"${{ github.event.inputs.version }}\"" > clipmorph/__version__.py
        
        # Commit changes (allow empty if no changes)
        git add clipmorph/__version__.py
        git diff --staged --quiet || git commit -m "Release v${{ github.event.inputs.version }}"
        
        # Create tag
        git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
        
        # Push changes using the app token
        git remote set-url origin "https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/${{ github.repository }}.git"
        
        # Only push to main if there were changes
        git diff --quiet HEAD origin/main || git push origin main
        
        # Always push the tag
        git push origin "v${{ github.event.inputs.version }}"